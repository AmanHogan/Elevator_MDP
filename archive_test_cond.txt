 # Check the action for Elevator A
        elif action_A[0] == 'DOORS':

            ####################################################################################
            # NOTE: People can only leave and enter the elevator as it is open

            # Door open and going to close and person waiting and call floor same as elevator floor
            if a_door == OPEN and p1_loc == WAITING and p1_call == a_floor:
                 # adds passenger
                 p1_loc = IN_A

            # Door open and person in elev B and call floor same as elevator floor
            if a_door == OPEN and p1_loc == IN_B and p1_call == a_floor:
                 pass
            
            # Door open and peson in elev A and on call floor
            if a_door == OPEN and p1_loc == IN_A and p1_call == a_floor:
                 pass
                
            # Door open and person outside waiting and elve same as exit floor
            if a_door == OPEN and p1_loc == WAITING and p1_exit == a_floor:
                pass
            
            # Door open and person in B  and elve same as exit floor
            if a_door == OPEN and p1_loc == IN_B and p1_exit == a_floor:
                pass
            
            # Door open and person in A  and elve same as exit floor
            # Remove person from elevator and premove from list of people
            if a_door == OPEN and p1_loc == IN_A and p1_exit == a_floor:
                self.people.remove((p1_call, p1_exit, WAITING))
                p1_call, p1_exit, p1_loc = 0, 0, WAITING

            ############################################################################
            # Door open and person waiting and call floor same as elevator floor
            if a_door == OPEN and p2_loc == WAITING and p2_call == a_floor:
                 p2_loc = IN_A

            # Door open and person in elev B and call floor same as elevator floor
            if a_door == OPEN and p2_loc == IN_B and p2_call == a_floor:
                 pass
            
            # Door open and peson in elev A and on call floor
            if a_door == OPEN and p2_loc == IN_A and p2_call == a_floor:
                 pass
                
            # Door open and person outside waiting and elve same as exit floor
            if a_door == OPEN and p2_loc == WAITING and p2_exit == a_floor:
                pass
            
            # Door open and person in B  and elve same as exit floor
            if a_door == OPEN and p2_loc == IN_B and p2_exit == a_floor:
                pass
            
            # Door open and person in A  and elve same as exit floor
            # Remove person from elevator and premove from list of people
            if a_door == OPEN and p2_loc == IN_A and p2_exit == a_floor:
                self.people.remove((p2_call, p2_exit, WAITING))
                p2_call, p2_exit, p2_loc = 0, 0, WAITING

            #######################################################################
            
            # If closed and about to open and person waiting outside on call floor
            # sit there essentially
            if a_door == CLOSED and p1_loc == WAITING and p1_call == a_floor:
                pass
            
            # Door closed but opens on call floor
            if a_door == CLOSED and p1_loc == IN_A and p1_call == a_floor:
                pass
            
            # Door closed but opens when person is in B
            if a_door == CLOSED and p1_loc == IN_B and p1_call == a_floor:
                pass

            # Door closed but opens on a person's exiting fgloor while they are wating
            if a_door == CLOSED and p1_loc == WAITING and p1_exit == a_floor:
                pass

            # door closed but opens when a person is in elevator and there exit floot
            if a_door == CLOSED and p1_loc == IN_A and p1_exit == a_floor:
                pass
            
            # door closed but opens when a person is in elevator B and there exit floot
            if a_door == CLOSED and p1_loc == IN_B and p1_exit == a_floor:
                pass

            ####################################################################
            # If closed and about to open and person waiting outside on call floor
            # sit there essentially
            if a_door == CLOSED and p2_loc == WAITING and p2_call == a_floor:
                pass
            
            # Door closed but opens on call floor
            if a_door == CLOSED and p2_loc == IN_A and p2_call == a_floor:
                pass
            
            # Door closed but opens when person is in B
            if a_door == CLOSED and p2_loc == IN_B and p2_call == a_floor:
                pass

            # Door closed but opens on a person's exiting fgloor while they are wating
            if a_door == CLOSED and p2_loc == WAITING and p2_exit == a_floor:
                pass

            # door closed but opens when a person is in elevator and there exit floot
            if a_door == CLOSED and p2_loc == IN_A and p2_exit == a_floor:
                pass
            
            # door closed but opens when a person is in elevator B and there exit floot
            if a_door == CLOSED and p2_loc == IN_B and p2_exit == a_floor:
                pass

            
            elevator_A_state = ('A', a_floor, not a_door)

            #################################################################################################
        
        ################# Check the action for Elevator B ##############################################

        if action_B[0] == 'UP' and b_floor < NFLOORS and b_door == False:
            elevator_B_state = ('B', b_floor + 1, b_door)

        elif action_B[0] == 'DOWN' and elevator_B_state[1] > 1 and b_door == False:
            elevator_B_state = ('B', b_floor - 1, b_door)

        elif action_B[0] == 'HOLD':
            pass

        # Check the action for Elevator B
        elif action_B[0] == 'DOORS':
            
             ####################################################################################
            # NOTE: People can only leave and enter the elevator as it is open

            # Door open and going to close and person waiting and call floor same as elevator floor
            if b_door == OPEN and p1_loc == WAITING and p1_call == b_door:
                 # adds passenger
                 p1_loc = IN_B

            # Door open and person in elev B and call floor same as elevator floor
            if b_door == OPEN and p1_loc == IN_B and p1_call == b_door:
                 pass
            
            # Door open and peson in elev A and on call floor
            if b_door == OPEN and p1_loc == IN_A and p1_call == b_door:
                 pass
                
            # Door open and person outside waiting and elve same as exit floor
            if b_door == OPEN and p1_loc == WAITING and p1_exit == b_door:
                pass
            
            # Door open and person in B  and elve same as exit floor
            if b_door == OPEN and p1_loc == IN_B and p1_exit == b_door:
                pass
            
            # Door open and person in A  and elve same as exit floor
            # Remove person from elevator and premove from list of people
            if b_door == OPEN and p1_loc == IN_B and p1_exit == b_door:
                self.people.remove((p1_call, p1_exit, WAITING))
                p1_call, p1_exit, p1_loc = 0, 0, WAITING

            ############################################################################
            # Door open and person waiting and call floor same as elevator floor
            if b_door == OPEN and p2_loc == WAITING and p2_call == b_door:
                 p2_loc = IN_A

            # Door open and person in elev B and call floor same as elevator floor
            if b_door == OPEN and p2_loc == IN_B and p2_call == b_door:
                 pass
            
            # Door open and peson in elev A and on call floor
            if b_door == OPEN and p2_loc == IN_A and p2_call == b_door:
                 pass
                
            # Door open and person outside waiting and elve same as exit floor
            if b_door == OPEN and p2_loc == WAITING and p2_exit == b_door:
                pass
            
            # Door open and person in B  and elve same as exit floor
            if b_door == OPEN and p2_loc == IN_B and p2_exit == b_door:
                pass
            
            # Door open and person in A  and elve same as exit floor
            # Remove person from elevator and premove from list of people
            if b_door == OPEN and p2_loc == IN_B and p2_exit == b_door:
                self.people.remove((p2_call, p2_exit, WAITING))
                p2_call, p2_exit, p2_loc = 0, 0, WAITING

            #######################################################################
            
            # If closed and about to open and person waiting outside on call floor
            # sit there essentially
            if b_door == CLOSED and p1_loc == WAITING and p1_call == b_door:
                pass
            
            # Door closed but opens on call floor
            if b_door == CLOSED and p1_loc == IN_A and p1_call == b_door:
                pass
            
            # Door closed but opens when person is in B
            if b_door == CLOSED and p1_loc == IN_B and p1_call == b_door:
                pass

            # Door closed but opens on a person's exiting fgloor while they are wating
            if b_door == CLOSED and p1_loc == WAITING and p1_exit == b_door:
                pass

            # door closed but opens when a person is in elevator and there exit floot
            if b_door == CLOSED and p1_loc == IN_A and p1_exit == b_door:
                pass
            
            # door closed but opens when a person is in elevator B and there exit floot
            if b_door == CLOSED and p1_loc == IN_B and p1_exit == b_door:
                pass

            ####################################################################
            # If closed and about to open and person waiting outside on call floor
            # sit there essentially
            if b_door == CLOSED and p2_loc == WAITING and p2_call == b_door:
                pass
            
            # Door closed but opens on call floor
            if b_door == CLOSED and p2_loc == IN_A and p2_call == b_door:
                pass
            
            # Door closed but opens when person is in B
            if b_door == CLOSED and p2_loc == IN_B and p2_call == b_door:
                pass

            # Door closed but opens on a person's exiting fgloor while they are wating
            if b_door == CLOSED and p2_loc == WAITING and p2_exit == b_door:
                pass

            # door closed but opens when a person is in elevator and there exit floot
            if b_door == CLOSED and p2_loc == IN_A and p2_exit == b_door:
                pass
            
            # door closed but opens when a person is in elevator B and there exit floot
            if b_door == CLOSED and p2_loc == IN_B and p2_exit == b_door:
                pass

            
            elevator_B_state = ('B', b_floor, not b_door)
